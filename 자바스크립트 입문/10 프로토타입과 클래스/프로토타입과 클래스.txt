10 프로토타입과 클래스

1. 객체 생성자
프로토타입과 클래스에 대해 알아보기전, 우선 객체 생성자에 대해 알아보자.
객체 생성자는 함수를 통해 새로운 객체를 만들고,
넣고싶은 값 혹은 함수들을 구현할수 있게 해줌.

객체 생성자를 사용 할 때는 보통 함수의 이름을 대문자로 시작하고,
새로운 객체를 만들 때에는 new 키워드를 앞에 붙여주어야 합니다.

dog 가 가지고있는 say 함수 와 cat 이 가지고있는 say 함수가
똑같음에도 불구하고 객체가 생성될때마다 함수도 새로 만들어져서
this.say 로 설정이 되고있다.

같은 객체 생성자 함수를 사용하는 경우, 특정 함수또는 값을 재사용할수
있는데, 이것이 프로토타입 이다.

1. 프로토타입

객체 생성자 함수 아래에 .prototype.[원하는키] =  을 입력하여
설정할수 있다.

2. 객체 생성자 상속받기 

예를들어 Cat 과 Dog 라는 새로운 객체 생성자를 만든다고 가정.
그리고, 해당 객체 생성자 들에서 Animal 의 기능을 재사용 한다 가정.

새로만든 Dog, Cat 함수에서 Animal.call 호출
첫번째 인자 = this, 그 이후에는 Animal 객체 생성자 함수에서
필요로 하는 파라미터 넣어줌.

prototype 을 공유해야 하기 때문에 상속받은 객체 생성자 함수를 만들고
나서 prototype 값을 Animal.prototype 으로 설정.

3. 클래스 

클래스 기능은 C++, Java, C#, PHP 등의 다른 프로그래밍 언어에는 
있는 기능인데 자바 스크립트에는 없었기 때문에 예전 JS(ES5) 에서는
클래스 문법이 따로 없었기 때문에 작성한 코드처럼 객체 생성자 함수를
사용하여 비슷한 작업을 구현해왔다.

ES6 부터 class 문법이 추가되었다.
우리가 객체 생성자로 구현했던 코드를 조금더 명확하고, 깔끔하게
구현할수 있게 해줌. 추가적으로, 상속도 훨씬 쉽게 함.

여기서 say 라는 함수를 클래스 내부에 선언 하였음.
클래스 내부의 함수는 '메서드' 라고 부름.
이렇게 메서드를 만들면 자동으로 prototype 으로 등록되는것.

( 클래스를 만들고, 새로운 const 를 선언하면서 같은 클래스를 지닐수 있게됨 )

상속을 할때는 extends 키워드를 사용,
super() 함수가 상속받은 클래스의 생성자 ( 여기선 Animal ) 을 가리킴.

클래스를 만들어서 사용하면 같은 형태를 지닌 객체들을 만들때 
객체들이 지닌 값과 함수를 보기 좋은 형태로 쉽게 관리할수 있다.
